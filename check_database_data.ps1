# Script kiem tra du lieu trong database de tao thanh toan
# Lay thong tin khach hang va hop dong tu API

Write-Host "=== KIEM TRA DU LIEU DATABASE ===" -ForegroundColor Cyan
Write-Host ""

# Cau hinh
$API_GATEWAY_URL = "http://localhost:8080"

$headers = @{
    "Content-Type" = "application/json"
    "Accept" = "application/json"
}

Write-Host "1. Kiem tra ket noi API Gateway..." -ForegroundColor Yellow
try {
    $healthCheck = Invoke-RestMethod -Uri "$API_GATEWAY_URL/actuator/health" -Method GET -Headers $headers -TimeoutSec 10
    Write-Host "API Gateway dang hoat dong" -ForegroundColor Green
} catch {
    Write-Host "Khong the ket noi den API Gateway tai $API_GATEWAY_URL" -ForegroundColor Red
    Write-Host "Vui long dam bao API Gateway dang chay tren port 8080" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "2. L·∫•y danh s√°ch kh√°ch h√†ng..." -ForegroundColor Yellow
try {
    $customers = Invoke-RestMethod -Uri "$API_GATEWAY_URL/api/customer" -Method GET -Headers $headers
    Write-Host "‚úÖ T√¨m th·∫•y $($customers.Count) kh√°ch h√†ng" -ForegroundColor Green

    if ($customers.Count -gt 0) {
        Write-Host ""
        Write-Host "DANH S√ÅCH KH√ÅCH H√ÄNG:" -ForegroundColor Cyan
        Write-Host "ID`tT√™n`t`t`tC√¥ng ty`t`t`tSƒêT" -ForegroundColor White
        Write-Host "---`t---`t`t`t---`t`t`t---" -ForegroundColor Gray

        $customers | ForEach-Object {
            $name = if ($_.fullname.Length -gt 15) { $_.fullname.Substring(0, 15) + "..." } else { $_.fullname }
            $company = if ($_.companyName -and $_.companyName.Length -gt 15) { $_.companyName.Substring(0, 15) + "..." } else { if ($_.companyName) { $_.companyName } else { "N/A" } }
            Write-Host "$($_.id)`t$name`t`t$company`t`t$($_.phoneNumber)" -ForegroundColor White
        }
    } else {
        Write-Host "‚ö†Ô∏è Kh√¥ng c√≥ kh√°ch h√†ng n√†o trong database" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch kh√°ch h√†ng: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "3. L·∫•y danh s√°ch h·ª£p ƒë·ªìng..." -ForegroundColor Yellow
try {
    $contracts = Invoke-RestMethod -Uri "$API_GATEWAY_URL/api/customer-contract" -Method GET -Headers $headers
    Write-Host "‚úÖ T√¨m th·∫•y $($contracts.Count) h·ª£p ƒë·ªìng" -ForegroundColor Green

    if ($contracts.Count -gt 0) {
        Write-Host ""
        Write-Host "DANH S√ÅCH H·ª¢P ƒê·ªíNG:" -ForegroundColor Cyan
        Write-Host "ID`tKh√°ch h√†ng ID`tT·ªïng ti·ªÅn`t`tƒê√£ tr·∫£`t`tC√≤n l·∫°i`t`tM√¥ t·∫£" -ForegroundColor White
        Write-Host "---`t---`t`t---`t`t---`t`t---`t`t---" -ForegroundColor Gray

        $contracts | ForEach-Object {
            $totalPaid = if ($_.totalPaid) { $_.totalPaid } else { 0 }
            $remaining = $_.totalAmount - $totalPaid
            $description = if ($_.description -and $_.description.Length -gt 20) { $_.description.Substring(0, 20) + "..." } else { if ($_.description) { $_.description } else { "N/A" } }

            $color = if ($remaining -le 0) { "Green" } elseif ($totalPaid -gt 0) { "Yellow" } else { "White" }
            Write-Host "$($_.id)`t$($_.customerId)`t`t$($_.totalAmount)`t`t$totalPaid`t`t$remaining`t`t$description" -ForegroundColor $color
        }

        Write-Host ""
        Write-Host "Ch√∫ th√≠ch m√†u:" -ForegroundColor Cyan
        Write-Host "- Xanh l√°: ƒê√£ thanh to√°n ƒë·ªß" -ForegroundColor Green
        Write-Host "- V√†ng: ƒê√£ thanh to√°n m·ªôt ph·∫ßn" -ForegroundColor Yellow
        Write-Host "- Tr·∫Øng: Ch∆∞a thanh to√°n" -ForegroundColor White
    } else {
        Write-Host "‚ö†Ô∏è Kh√¥ng c√≥ h·ª£p ƒë·ªìng n√†o trong database" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch h·ª£p ƒë·ªìng: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "4. Ph√¢n t√≠ch d·ªØ li·ªáu ƒë·ªÉ t·∫°o thanh to√°n..." -ForegroundColor Yellow

if ($customers.Count -gt 0 -and $contracts.Count -gt 0) {
    # Nh√≥m h·ª£p ƒë·ªìng theo kh√°ch h√†ng
    $contractsByCustomer = $contracts | Group-Object -Property customerId

    Write-Host ""
    Write-Host "PH√ÇN T√çCH THEO KH√ÅCH H√ÄNG:" -ForegroundColor Cyan

    foreach ($group in $contractsByCustomer) {
        $customerId = [int]$group.Name
        $customer = $customers | Where-Object { $_.id -eq $customerId }
        $customerName = if ($customer) { $customer.fullname } else { "Kh√¥ng t√¨m th·∫•y" }

        Write-Host ""
        Write-Host "Kh√°ch h√†ng: $customerName (ID: $customerId)" -ForegroundColor Yellow

        $unpaidContracts = @()
        $partiallyPaidContracts = @()
        $totalUnpaidAmount = 0

        foreach ($contract in $group.Group) {
            $totalPaid = if ($contract.totalPaid) { $contract.totalPaid } else { 0 }
            $remaining = $contract.totalAmount - $totalPaid

            if ($remaining -gt 0) {
                if ($totalPaid -eq 0) {
                    $unpaidContracts += $contract
                } else {
                    $partiallyPaidContracts += $contract
                }
                $totalUnpaidAmount += $remaining
            }

            Write-Host "  - H·ª£p ƒë·ªìng $($contract.id): $($contract.totalAmount) VNƒê (ƒê√£ tr·∫£: $totalPaid, C√≤n l·∫°i: $remaining)" -ForegroundColor White
        }

        if ($unpaidContracts.Count -gt 0 -or $partiallyPaidContracts.Count -gt 0) {
            Write-Host "  üìä T·ªïng k·∫øt:" -ForegroundColor Cyan
            Write-Host "    - H·ª£p ƒë·ªìng ch∆∞a thanh to√°n: $($unpaidContracts.Count)" -ForegroundColor White
            Write-Host "    - H·ª£p ƒë·ªìng thanh to√°n m·ªôt ph·∫ßn: $($partiallyPaidContracts.Count)" -ForegroundColor White
            Write-Host "    - T·ªïng s·ªë ti·ªÅn c√≤n l·∫°i: $totalUnpaidAmount VNƒê" -ForegroundColor White

            # T·∫°o g·ª£i √Ω thanh to√°n
            if (($unpaidContracts.Count + $partiallyPaidContracts.Count) -gt 1) {
                Write-Host "  üí° C√≥ th·ªÉ t·∫°o thanh to√°n g·ªôp cho kh√°ch h√†ng n√†y" -ForegroundColor Green

                # T·∫°o script m·∫´u
                Write-Host ""
                Write-Host "  üìù Script m·∫´u cho kh√°ch h√†ng n√†y:" -ForegroundColor Cyan
                Write-Host "  customerId = $customerId" -ForegroundColor Gray

                $sampleContracts = ($unpaidContracts + $partiallyPaidContracts) | Select-Object -First 3
                $sampleTotal = 0

                Write-Host "  contractPayments = @(" -ForegroundColor Gray
                foreach ($contract in $sampleContracts) {
                    $contractTotalPaid = if ($contract.totalPaid) { $contract.totalPaid } else { 0 }
                    $remaining = $contract.totalAmount - $contractTotalPaid
                    $suggestedAmount = [Math]::Min($remaining, [Math]::Floor($remaining * 0.5))
                    $sampleTotal += $suggestedAmount

                    Write-Host "    @`{ contractId = $($contract.id); allocatedAmount = $suggestedAmount `}," -ForegroundColor Gray
                }
                Write-Host "  )" -ForegroundColor Gray
                Write-Host "  totalAmount = $sampleTotal" -ForegroundColor Gray
            }
        } else {
            Write-Host "  ‚úÖ T·∫•t c·∫£ h·ª£p ƒë·ªìng ƒë√£ ƒë∆∞·ª£c thanh to√°n ƒë·ªß" -ForegroundColor Green
        }
    }
} else {
    Write-Host "‚ö†Ô∏è Kh√¥ng ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ ph√¢n t√≠ch" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "5. L·∫•y danh s√°ch thanh to√°n hi·ªán c√≥..." -ForegroundColor Yellow
try {
    $payments = Invoke-RestMethod -Uri "$API_GATEWAY_URL/api/customer-payment" -Method GET -Headers $headers
    Write-Host "‚úÖ T√¨m th·∫•y $($payments.Count) thanh to√°n" -ForegroundColor Green

    if ($payments.Count -gt 0) {
        Write-Host ""
        Write-Host "THANH TO√ÅN G·∫¶N NH·∫§T:" -ForegroundColor Cyan
        $recentPayments = $payments | Sort-Object { [DateTime]$_.paymentDate } -Descending | Select-Object -First 5

        $recentPayments | ForEach-Object {
            $paymentDate = [DateTime]$_.paymentDate
            $method = switch ($_.paymentMethod) {
                0 { "Ti·ªÅn m·∫∑t" }
                1 { "Chuy·ªÉn kho·∫£n" }
                2 { "Th·∫ª t√≠n d·ª•ng" }
                default { "Kh√°c" }
            }
            Write-Host "ID: $($_.id) | Ng√†y: $($paymentDate.ToString('dd/MM/yyyy')) | S·ªë ti·ªÅn: $($_.paymentAmount) | Ph∆∞∆°ng th·ª©c: $method | Kh√°ch h√†ng: $($_.customerId)" -ForegroundColor White
        }
    }
} catch {
    Write-Host "‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch thanh to√°n: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "=== HO√ÄN TH√ÄNH KI·ªÇM TRA ===" -ForegroundColor Cyan
Write-Host ""
Write-Host "H∆Ø·ªöNG D·∫™N TI·∫æP THEO:" -ForegroundColor Yellow
Write-Host "1. S·ª≠ d·ª•ng script 'create_sample_payment.ps1' v·ªõi d·ªØ li·ªáu m·∫´u" -ForegroundColor White
Write-Host "2. Ho·∫∑c s·ª≠ d·ª•ng script 'create_multiple_contract_payment.ps1' ƒë·ªÉ t·ª± ƒë·ªông t·∫°o thanh to√°n" -ForegroundColor White
Write-Host "3. Sua doi cac ID trong script theo du lieu thuc te o tren" -ForegroundColor White
